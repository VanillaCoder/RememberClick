{"version":3,"sources":["images/andriod18.png","images/andriod17.jpeg","images/bulma.jpg","images/buu.jpg","images/cell.jpg","images/frieza.jpg","images/gohan.jpeg","images/goku.png","images/krillin.jpg","images/master.jpeg","images/nappa.jpeg","images/picolo.jpeg","images/raditz.png","images/trunks.jpg","images/vegeta.jpeg","Tile.js","Boxes.js","App.js","index.js"],"names":["module","exports","styles","cardStyle","width","height","Tiles","props","className","onChange","changeEvent","onClick","shuffleEvent","data-clicked","data","class","style","src","image","alt","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","Boxes","state","tiles","img","goku","clicked","name","bulma","vegeta","gohan","cell","krillin","piccolo","frieza","buu","trunks","master","andriod17","andriod18","raditz","nappa","score","flag","nodes","slice","call","document","querySelectorAll","directions","0","1","2","3","classNames","map","p","Object","values","d","reduce","a","b","concat","Item","element","this","addEventListener","ev","update","prefix","classList","remove","add","node","getBoundingClientRect","top","left","x","pageX","window","pageXOffset","y","pageY","pageYOffset","round","atan2","getDirectionKey","forEach","setTimeout","alert","location","reload","setState","tile","changeScore","aTile","event","score2","React","Component","styless","fontStyle","textAlign","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3e2c3955.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/andriod18.313da6ef.png\";","module.exports = __webpack_public_path__ + \"static/media/andriod17.3e02ecdd.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/bulma.2320bda2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/buu.9f65ed55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cell.3d00c942.jpg\";","module.exports = __webpack_public_path__ + \"static/media/frieza.c9ef408a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gohan.b5864f97.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/goku.188ba28b.png\";","module.exports = __webpack_public_path__ + \"static/media/krillin.53fc59d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/master.73628dde.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/nappa.078dbbf0.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/picolo.004d8a7a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/raditz.864133d2.png\";","module.exports = __webpack_public_path__ + \"static/media/trunks.7ff77cc6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vegeta.ef05d367.jpeg\";","import React from 'react'\r\n\r\n\r\nconst styles = {\r\n    cardStyle: {\r\n        width: \"12.5rem\",\r\n        height: \"12.5rem\"\r\n    }\r\n}\r\n\r\n//testing\r\nexport function Tiles(props) {\r\n    return (\r\n        <li className=\"list-inline\"\r\n            onChange={props.changeEvent}\r\n            onClick={props.shuffleEvent}\r\n            data-clicked={props.data}\r\n            >\r\n            <a class=\"normal\">\r\n            </a>\r\n            <div class=\"info\">\r\n                <div className=\"card\" style={styles.cardStyle}>\r\n                    <img\r\n                        style={styles.cardStyle}\r\n                        src={props.image}\r\n                        className=\"card-img-top\" alt=\"...\"></img>\r\n\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\n//working sample\r\n// export function Tiles(props) {\r\n//     return (\r\n//         <div>\r\n//             <div className=\"card\" style={styles.cardStyle}>\r\n//                 <img \r\n//                 style={styles.cardStyle}\r\n//                 onChange={props.changeEvent}\r\n//                 onClick={props.shuffleEvent}\r\n//                 src={props.image} \r\n//                 data-clicked={props.data}\r\n//                 className=\"card-img-top\" alt=\"...\"></img>\r\n\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }","import React from 'react'\r\nimport { Tiles } from \"./Tile\"\r\nimport andriod18 from './images/andriod18.png'\r\nimport andriod17 from './images/andriod17.jpeg'\r\nimport bulma from './images/bulma.jpg'\r\nimport buu from './images/buu.jpg'\r\nimport cell from './images/cell.jpg'\r\nimport frieza from './images/frieza.jpg'\r\nimport gohan from './images/gohan.jpeg'\r\nimport goku from './images/goku.png'\r\nimport krillin from './images/krillin.jpg'\r\nimport master from './images/master.jpeg'\r\nimport nappa from './images/nappa.jpeg'\r\nimport piccolo from './images/picolo.jpeg'\r\nimport raditz from './images/raditz.png'\r\nimport trunks from './images/trunks.jpg'\r\nimport vegeta from './images/vegeta.jpeg'\r\n// import Score from \"./Score\"\r\n\r\n// does what it says\r\nconst shuffle = (array) => {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nconst original = () => {\r\n    let tiles = [\r\n        {\r\n            img: goku,\r\n            clicked: false,\r\n            name: \"Goku\",\r\n        },\r\n        {\r\n            img: bulma,\r\n            clicked: false,\r\n            name: \"Bulma\"\r\n        },\r\n        {\r\n            img: vegeta,\r\n            clicked: false,\r\n            name: \"Vegeta\"\r\n        },\r\n        {\r\n            img: gohan,\r\n            clicked: false,\r\n            name: \"Gohan\"\r\n        },\r\n        {\r\n            img: cell,\r\n            clicked: false,\r\n            name: \"Cell\"\r\n        },\r\n        {\r\n            img: krillin,\r\n            clicked: false,\r\n            name: \"Krillin\"\r\n        },\r\n        {\r\n            img: piccolo,\r\n            clicked: false,\r\n            name: \"Piccolo\"\r\n        },\r\n        {\r\n            img: frieza,\r\n            clicked: false,\r\n            name: \"Frieza\"\r\n        },\r\n        {\r\n            img: buu,\r\n            clicked: false,\r\n            name: \"Buu\"\r\n        },\r\n        {\r\n            img: trunks,\r\n            clicked: false,\r\n            name: \"Trunks\"\r\n        },\r\n        {\r\n            img: master,\r\n            clicked: false,\r\n            name: \"Master Roshi\"\r\n        },\r\n        {\r\n            img: andriod17,\r\n            clicked: false,\r\n            name: \"Andriod 17\"\r\n        },\r\n        {\r\n            img: andriod18,\r\n            clicked: false,\r\n            name: \"Andriod 18\"\r\n        },\r\n        {\r\n            img: raditz,\r\n            clicked: false,\r\n            name: \"Raditz\"\r\n        },\r\n        {\r\n            img: nappa,\r\n            clicked: false,\r\n            name: \"Nappa\"\r\n        }\r\n\r\n    ]\r\n    return (tiles)\r\n}\r\n\r\nconst score = (copy, currentTile) => {\r\n\r\n    let copyTiles = {\r\n        arr: [],\r\n        score: copy.score,\r\n        flag: copy.flag\r\n    }\r\n    if (copy.flag) {\r\n        copyTiles.score = 0;\r\n        console.log(copy)\r\n        copyTiles = original();\r\n        console.log(copy)\r\n        copy.tiles.map(result => {\r\n            if (result.name !== currentTile.name) {\r\n                copyTiles.arr.push({ img: result.img, clicked: result.clicked, name: result.name })\r\n            }\r\n            else if (result.name === currentTile.name && currentTile.clicked === false) {\r\n                copyTiles.arr.push({ img: result.img, clicked: true, name: result.name })\r\n                copyTiles.score = copyTiles.score + 1\r\n            }\r\n            else {\r\n                copyTiles.arr.push({ img: result.img, clicked: result.clicked, name: result.name })\r\n                copyTiles.score = -1;\r\n                console.log(\"YOU LOSE LOSER\")\r\n            }\r\n        })\r\n        return copyTiles\r\n    }\r\n    else {\r\n        console.log(copy)\r\n        copy.tiles.map(result => {\r\n            if (result.name !== currentTile.name) {\r\n                copyTiles.arr.push({ img: result.img, clicked: result.clicked, name: result.name })\r\n            }\r\n            else if (result.name === currentTile.name && currentTile.clicked === false) {\r\n                copyTiles.arr.push({ img: result.img, clicked: true, name: result.name })\r\n                if (copyTiles.score + 1 === 11) {\r\n                    copyTiles.score = + 1;\r\n                    copyTiles.flag = true;\r\n                }\r\n                else {\r\n                    copyTiles.score = copyTiles.score + 1\r\n                }\r\n            }\r\n            else {\r\n                copyTiles.arr.push({ img: result.img, clicked: result.clicked, name: result.name })\r\n                copyTiles.score = -1;\r\n                console.log(\"YOU LOSE LOSER\")\r\n            }\r\n        })\r\n        return copyTiles\r\n    }\r\n}\r\n\r\nexport default class Boxes extends React.Component {\r\n\r\n    // this is where my clicky tiles info will be stored\r\n    state = {\r\n        tiles: [\r\n            {\r\n            img: goku,\r\n            clicked: false,\r\n            name: \"Goku\",\r\n        },\r\n        {\r\n            img: bulma,\r\n            clicked: false,\r\n            name: \"Bulma\"\r\n        },\r\n        {\r\n            img: vegeta,\r\n            clicked: false,\r\n            name: \"Vegeta\"\r\n        },\r\n        {\r\n            img: gohan,\r\n            clicked: false,\r\n            name: \"Gohan\"\r\n        },\r\n        {\r\n            img: cell,\r\n            clicked: false,\r\n            name: \"Cell\"\r\n        },\r\n        {\r\n            img: krillin,\r\n            clicked: false,\r\n            name: \"Krillin\"\r\n        },\r\n        {\r\n            img: piccolo,\r\n            clicked: false,\r\n            name: \"Piccolo\"\r\n        },\r\n        {\r\n            img: frieza,\r\n            clicked: false,\r\n            name: \"Frieza\"\r\n        },\r\n        {\r\n            img: buu,\r\n            clicked: false,\r\n            name: \"Buu\"\r\n        },\r\n        {\r\n            img: trunks,\r\n            clicked: false,\r\n            name: \"Trunks\"\r\n        },\r\n        {\r\n            img: master,\r\n            clicked: false,\r\n            name: \"Master Roshi\"\r\n        },\r\n        {\r\n            img: andriod17,\r\n            clicked: false,\r\n            name: \"Andriod 17\"\r\n        },\r\n        {\r\n            img: andriod18,\r\n            clicked: false,\r\n            name: \"Andriod 18\"\r\n        },\r\n        {\r\n            img: raditz,\r\n            clicked: false,\r\n            name: \"Raditz\"\r\n        },\r\n        {\r\n            img: nappa,\r\n            clicked: false,\r\n            name: \"Nappa\"\r\n        }\r\n\r\n        ],\r\n        score: 0,\r\n        flag: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const nodes = [].slice.call(document.querySelectorAll('li'), 0);\r\n        const directions = { 0: 'top', 1: 'right', 2: 'bottom', 3: 'left' };\r\n        const classNames = ['in', 'out'].map((p) => Object.values(directions).map((d) => `${p}-${d}`)).reduce((a, b) => a.concat(b));\r\n\r\n        const getDirectionKey = (ev, node) => {\r\n            const { width, height, top, left } = node.getBoundingClientRect();\r\n            const l = ev.pageX - (left + window.pageXOffset);\r\n            const t = ev.pageY - (top + window.pageYOffset);\r\n            const x = (l - (width / 2) * (width > height ? (height / width) : 1));\r\n            const y = (t - (height / 2) * (height > width ? (width / height) : 1));\r\n            return Math.round(Math.atan2(y, x) / 1.57079633 + 5) % 4;\r\n        }\r\n\r\n        class Item {\r\n            constructor(element) {\r\n                this.element = element;\r\n                this.element.addEventListener('mouseover', (ev) => this.update(ev, 'in'));\r\n                this.element.addEventListener('mouseout', (ev) => this.update(ev, 'out'));\r\n            }\r\n\r\n            update(ev, prefix) {\r\n                this.element.classList.remove(...classNames);\r\n                this.element.classList.add(`${prefix}-${directions[getDirectionKey(ev, this.element)]}`);\r\n            }\r\n        }\r\n\r\n        nodes.forEach(node => new Item(node));\r\n    }\r\n\r\n\r\n    changeScore() {\r\n        if (this.state.score > 14) {\r\n            setTimeout(function(){ if(!alert('You win!')){window.location.reload();}; }, 50);\r\n        }\r\n    }\r\n\r\n\r\n    score2(name) {\r\n\r\n        this.setState({\r\n            tiles: this.state.tiles.map(tile => {\r\n                if (tile.name === name) {\r\n                    if (tile.clicked === true) {\r\n                        alert('You lose!')\r\n                        window.location.reload();\r\n                    }\r\n                    else {\r\n                        tile.clicked = true\r\n                        this.setState({ score: (this.state.score + 1) }, () => {this.changeScore()})\r\n                    }\r\n                }\r\n                return tile;\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h1>Score: {this.state.score}</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <ul>\r\n\r\n                        {this.state.tiles.map(aTile => {\r\n                            return (\r\n                                <Tiles\r\n                                    changeEvent={(event) => this.state}\r\n                                    shuffleEvent={(event) => {\r\n                                        this.score2(aTile.name)\r\n                                        this.setState({ tiles: shuffle(this.state.tiles) })\r\n                                    }}\r\n                                    image={aTile.img}\r\n                                    data={aTile.clicked}\r\n                                ></Tiles>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            // </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Boxes from \"./Boxes\";\r\nimport \"./App.scss\";\r\n\r\n\r\nconst styless = {\r\n  fontStyle : {\r\n    textAlign: \"center\"\r\n  }\r\n}\r\nfunction App() {\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <h2 style={styless.fontStyle}>DBZ Memory Game</h2>\r\n      <h3 style={styless.fontStyle}>Hover over each tile to uncover a character.<br></br> Click Each character once and you win!</h3>\r\n\r\n      <Boxes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}